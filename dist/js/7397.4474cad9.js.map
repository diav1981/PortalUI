{"version":3,"file":"js/7397.4474cad9.js","mappings":"yMAsHqBA,MAAM,e,GACHC,EAAAA,EAAAA,GAAwF,SAAjFD,MAAM,mBAAmBE,MAAA,gBAAoBC,IAAI,WAAU,kBAAc,G,eAM7EH,MAAM,e,GACTC,EAAAA,EAAAA,GAA6E,SAAtED,MAAM,mBAAmBE,MAAA,gBAAoBC,IAAI,UAAS,QAAI,G,eAMlEH,MAAM,e,GACTC,EAAAA,EAAAA,GAAgG,SAAzFD,MAAM,mBAAmBE,MAAA,gBAAoBC,IAAI,mBAAkB,kBAAc,G,eAMtFH,MAAM,oBAAoBI,KAAK,W,GACzBJ,MAAM,Y,GAMNA,MAAM,Y,GAMNA,MAAM,Y,GAOTA,MAAM,0B,GACFA,MAAM,WAAWK,GAAG,MAAMD,KAAK,Y,GAGzBJ,MAAM,O,aAEFA,MAAM,sB,GACFA,MAAM,kC,GAGHC,EAAAA,EAAAA,GAAyB,MAArBK,MAAM,OAAM,QAAI,G,GAWdA,MAAM,O,SAUdN,MAAM,yB,GAChBC,EAAAA,EAAAA,GAAwB,SAArB,qBAAiB,G,GAApBM,G,GAQLP,MAAM,kBAAkBK,GAAG,MAAMD,KAAK,Y,GAGhCJ,MAAM,O,aAEFA,MAAM,sB,GACFA,MAAM,kC,GAGHC,EAAAA,EAAAA,GAAyB,MAArBK,MAAM,OAAM,QAAI,G,GAWdA,MAAM,O,SAUdN,MAAM,yB,GAChBC,EAAAA,EAAAA,GAAwB,SAArB,qBAAiB,G,GAApBO,G,GAQLR,MAAM,kBAAkBK,GAAG,MAAMD,KAAK,Y,GAGhCJ,MAAM,O,aAEFA,MAAM,sB,GACFA,MAAM,kC,GAGHC,EAAAA,EAAAA,GAAyB,MAArBK,MAAM,OAAM,QAAI,G,GAWdA,MAAM,O,SAUdN,MAAM,yB,GAChBC,EAAAA,EAAAA,GAAwB,SAArB,qBAAiB,G,GAApBQ,G,6MAhKpCC,EAAAA,EAAAA,IA+KSC,GAAAA,KAAAA,C,kBA9KP,IAA4C,EAA5CC,EAAAA,EAAAA,IAA4CC,EAAAA,CAA/BC,MAAOC,EAAAA,MAAQC,MAAOD,EAAAA,O,2BACnCH,EAAAA,EAAAA,IA4KQK,EAAAA,KAAAA,C,kBA1KJ,IAyKQ,EAzKRL,EAAAA,EAAAA,IAyKQK,EAAAA,KAAAA,C,kBAxKN,IAuKQ,EAvKRL,EAAAA,EAAAA,IAuKQM,EAAAA,CAvKDC,KAAK,MAAI,C,kBACd,IAqKS,EArKTP,EAAAA,EAAAA,IAqKSQ,GAAAA,CArKD,cAAO,C,kBACb,IAmKc,EAnKdR,EAAAA,EAAAA,IAmKcS,GAAAA,CAnKDrB,MAAM,OAAK,C,kBAEtB,IAKY,EALZC,EAAAA,EAAAA,GAKY,MALZqB,EAKY,CAJJC,GAAwF,SACxFtB,EAAAA,EAAAA,GAES,UAFDD,MAAM,cAAcK,GAAG,U,qCAAmBU,EAAAA,cAAa,GAAGS,SAAM,oBAAEC,EAAAA,sBAAAA,EAAAA,wBAAAA,K,gBACxEC,EAAAA,EAAAA,IAA8HC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAAlGZ,EAAAA,gBAAba,K,WAAfF,EAAAA,EAAAA,IAA8H,UAAjFG,IAAKD,EAAUE,GAAKC,MAAOH,EAAUE,K,QAAOF,EAAUI,iBAAe,Q,mBADlEjB,EAAAA,oBAKpDd,EAAAA,EAAAA,GAKM,MALNgC,EAKM,CAJJC,GAA6E,SAC7EjC,EAAAA,EAAAA,GAES,UAFDD,MAAM,cAAcK,GAAG,S,qCAAkBU,EAAAA,aAAY,GAAGS,SAAM,oBAAEC,EAAAA,sBAAAA,EAAAA,wBAAAA,K,gBACtEC,EAAAA,EAAAA,IAAyGC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAAlFZ,EAAAA,UAARoB,K,WAAfT,EAAAA,EAAAA,IAAyG,UAAvEG,IAAKM,EAAKC,SAAWL,MAAOI,EAAKC,W,QAAaD,EAAKC,UAAQ,Q,mBAD9CrB,EAAAA,mBAKnDd,EAAAA,EAAAA,GAKM,MALNoC,EAKM,CAJJC,GAAgG,SAChGrC,EAAAA,EAAAA,GAES,UAFDD,MAAM,cAAcK,GAAG,kB,qCAA2BkC,EAAAA,sBAAqB,GAAGf,SAAM,oBAAEC,EAAAA,sBAAAA,EAAAA,wBAAAA,K,gBACxFC,EAAAA,EAAAA,IAA+HC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAA1GY,EAAAA,mBAANC,K,WAAfd,EAAAA,EAAAA,IAA+H,UAAtFG,IAAKW,EAAGC,kBAAoBV,MAAOS,EAAGC,oB,QAAsBD,EAAGE,aAAW,Q,mBAD3DH,EAAAA,4BAK5DtC,EAAAA,EAAAA,GAmBO,KAnBP0C,EAmBO,EAlBD1C,EAAAA,EAAAA,GAKK,KALL2C,EAKK,EAJDhC,EAAAA,EAAAA,IAGSiC,EAAAA,CAHD7C,MAAM,kBAAkB,iBAAe,MAAM8C,KAAK,OAAO1C,KAAK,MAClE,gBAAc,Q,mBAAO,IAEzB,UAFyB,Y,SAI7BH,EAAAA,EAAAA,GAKK,KALL8C,EAKK,EAJDnC,EAAAA,EAAAA,IAGSiC,EAAAA,CAHD7C,MAAM,WAAW,iBAAe,MAAM8C,KAAK,OAAO1C,KAAK,MAC3D,gBAAc,S,mBAAQ,IAE1B,UAF0B,Y,SAI9BH,EAAAA,EAAAA,GAKK,KALL+C,EAKK,EAJDpC,EAAAA,EAAAA,IAGSiC,EAAAA,CAHD7C,MAAM,WAAW,iBAAe,MAAM8C,KAAK,OAAO1C,KAAK,MAC3D,gBAAc,S,mBAAQ,IAE1B,UAF0B,Y,WAKlCH,EAAAA,EAAAA,GAsHM,MAtHNgD,EAsHM,EArHFhD,EAAAA,EAAAA,GAsCM,MAtCNiD,EAsCM,EArCJtC,EAAAA,EAAAA,IAoCQK,EAAAA,CApCDjB,MAAM,mBAAiB,C,kBAC5B,IAgCQ,EAhCRY,EAAAA,EAAAA,IAgCQM,EAAAA,CAhCDiC,GAAG,MAAI,C,kBACZ,IA8BM,EA9BNlD,EAAAA,EAAAA,GA8BM,MA9BNmD,EA8BM,CA7BOb,EAAAA,aAAU,WAArBb,EAAAA,EAAAA,IAyBM,UAxBJzB,EAAAA,EAAAA,GAuBM,MAvBNoD,EAuBM,EAtBJpD,EAAAA,EAAAA,GAqBU,QArBVqD,EAqBU,EApBNrD,EAAAA,EAAAA,GAQQ,eAPJA,EAAAA,EAAAA,GAMK,WALHsD,IAAyB,WAEvB7B,EAAAA,EAAAA,IAEWC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAFgB,IAAV6B,IACfvD,EAAAA,EAAAA,GAAkC,M,IADCuD,EAC/BlD,MAAM,Q,QAAUkD,GAAM,K,UAIpCvD,EAAAA,EAAAA,GAUQ,6BARJyB,EAAAA,EAAAA,IAOWC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAPcY,EAAAA,SAARkB,K,WACf/B,EAAAA,EAAAA,IAKK,M,IANiC+B,EAAKC,c,EAEzCzD,EAAAA,EAAAA,GAEK,KAFL0D,GAEK,YADGC,KAAKH,EAAKC,cAAcG,mBAAmB,UAAD,gBAElDnC,EAAAA,EAAAA,IAAgFC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAAnD,IAAE,CAAnBI,EAAO+B,KAAnB7D,EAAAA,EAAAA,GAAgF,MAA9C4B,IAAKiC,IAAK,QAAKL,EAAK,KAAOK,EAAQ,KAAH,K,sCAOlFpC,EAAAA,EAAAA,IAEM,MAFNqC,EAEM,S,OAGVnD,EAAAA,EAAAA,IACQM,EAAAA,CADDiC,GAAG,S,SAIdlD,EAAAA,EAAAA,GAsCM,MAtCN+D,EAsCM,EArCJpD,EAAAA,EAAAA,IAoCQK,EAAAA,CApCDjB,MAAM,mBAAiB,C,kBAC5B,IAgCQ,EAhCRY,EAAAA,EAAAA,IAgCQM,EAAAA,CAhCDiC,GAAG,MAAI,C,kBACZ,IA8BM,EA9BNlD,EAAAA,EAAAA,GA8BM,MA9BNgE,EA8BM,CA7BO1B,EAAAA,aAAU,WAArBb,EAAAA,EAAAA,IAyBM,UAxBJzB,EAAAA,EAAAA,GAuBM,MAvBNiE,EAuBM,EAtBJjE,EAAAA,EAAAA,GAqBU,QArBVkE,EAqBU,EApBNlE,EAAAA,EAAAA,GAQQ,eAPJA,EAAAA,EAAAA,GAMK,WALHmE,IAAyB,WAEvB1C,EAAAA,EAAAA,IAEWC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAFgB,IAAV6B,IACfvD,EAAAA,EAAAA,GAAkC,M,IADCuD,EAC/BlD,MAAM,Q,QAAUkD,GAAM,K,UAIpCvD,EAAAA,EAAAA,GAUQ,6BARJyB,EAAAA,EAAAA,IAOWC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAPcY,EAAAA,SAARkB,K,WACf/B,EAAAA,EAAAA,IAKK,M,IANiC+B,EAAKY,c,EAEzCpE,EAAAA,EAAAA,GAEK,KAFLqE,GAEK,YADGV,KAAKH,EAAKY,cAAcR,mBAAmB,UAAD,gBAElDnC,EAAAA,EAAAA,IAAgFC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAAnD,IAAE,CAAnBI,EAAO+B,KAAnB7D,EAAAA,EAAAA,GAAgF,MAA9C4B,IAAKiC,IAAK,QAAKL,EAAK,KAAOK,EAAQ,KAAH,K,sCAOlFpC,EAAAA,EAAAA,IAEM,MAFN6C,EAEM,S,OAGV3D,EAAAA,EAAAA,IACQM,EAAAA,CADDiC,GAAG,S,SAIdlD,EAAAA,EAAAA,GAsCM,MAtCNuE,EAsCM,EArCJ5D,EAAAA,EAAAA,IAoCQK,EAAAA,CApCDjB,MAAM,mBAAiB,C,kBAC5B,IAgCQ,EAhCRY,EAAAA,EAAAA,IAgCQM,EAAAA,CAhCDiC,GAAG,MAAI,C,kBACZ,IA8BM,EA9BNlD,EAAAA,EAAAA,GA8BM,MA9BNwE,EA8BM,CA7BOlC,EAAAA,aAAU,WAArBb,EAAAA,EAAAA,IAyBM,UAxBJzB,EAAAA,EAAAA,GAuBM,MAvBNyE,EAuBM,EAtBJzE,EAAAA,EAAAA,GAqBU,QArBV0E,EAqBU,EApBN1E,EAAAA,EAAAA,GAQQ,eAPJA,EAAAA,EAAAA,GAMK,WALH2E,IAAyB,WAEvBlD,EAAAA,EAAAA,IAEWC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAFgB,IAAV6B,IACfvD,EAAAA,EAAAA,GAAkC,M,IADCuD,EAC/BlD,MAAM,Q,QAAUkD,GAAM,K,UAIpCvD,EAAAA,EAAAA,GAUQ,6BARJyB,EAAAA,EAAAA,IAOWC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAPcY,EAAAA,SAARkB,K,WACf/B,EAAAA,EAAAA,IAKK,M,IANiC+B,EAAKY,c,EAEzCpE,EAAAA,EAAAA,GAEK,KAFL4E,GAEK,YADGjB,KAAKH,EAAKY,cAAcR,mBAAmB,UAAD,gBAElDnC,EAAAA,EAAAA,IAAgFC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAAnD,IAAE,CAAnBI,EAAO+B,KAAnB7D,EAAAA,EAAAA,GAAgF,MAA9C4B,IAAKiC,IAAK,QAAKL,EAAK,KAAOK,EAAQ,KAAH,K,sCAOlFpC,EAAAA,EAAAA,IAEM,MAFNoD,EAEM,S,OAGVlE,EAAAA,EAAAA,IACQM,EAAAA,CADDiC,GAAG,S,2KAzQ1C,IACE4B,KAAM,CACJjE,MAAO,oCACPkE,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAASC,EAAAA,MAEzCC,OACE,MAAO,CACLtE,MAAO,oCACPE,MAAO,CACL,CACEqE,KAAM,iBACNvC,KAAM,KAER,CACEuC,KAAM,oCACNC,QAAQ,IAGZC,eAAe,GACfC,kBAAmB,KACnBC,cAAe,KACfC,iBAAkB,KAClBC,eAAgB,KAChBC,SAAU,KACVC,aAAc,KACdC,SAAU,KAEd,EACAC,WAAY,CACVC,OAAM,IACNC,WAAUA,EAAAA,GAEZC,SAAS,CACPC,kBACE,QAASC,KAAKN,UAAYM,KAAKN,SAASO,OAAS,CACnD,GAEFC,QAAQ,CACNC,sBACEC,QAAQC,IAAI,iBACZ,IAAIC,EAAM,GAGRA,EAF2B,KAA1BN,KAAKZ,kBAEC,gGAA+FY,KAAKP,gBAAgBO,KAAKV,oBAAoBU,KAAKT,iBAIlJ,+FAA8FS,KAAKP,gBAAgBO,KAAKV,oBAAoBU,KAAKT,iBAE1J,IACE,MAAMgB,QAAiBC,GAAAA,EAAAA,IAAUF,GACjCN,KAAKN,SAAWa,EAASvB,KACzBoB,QAAQC,IAAIL,KAAKN,SAGnB,CAFE,MAAOe,GACPL,QAAQK,MAAM,4BAA6BA,EAC7C,CACF,EACAN,sBACE,MAAMG,EAAM,iFACZ,IACE,MAAMC,QAAiBC,GAAAA,EAAAA,IAAUF,GACjCN,KAAKR,SAAWe,EAASvB,IAG3B,CAFE,MAAOyB,GACPL,QAAQK,MAAM,4BAA6BA,EAC7C,CACF,EACAC,6BACE,MAAMC,EAAc,IAAInD,KAClBoD,GAAcC,EAAAA,GAAAA,GAASF,EAAa,GACpCG,GAAYC,EAAAA,GAAAA,GAAoB,CAAEC,MAAOJ,EAAaK,IAAKN,IAE3DO,EAASJ,EAAUK,KAAIC,IAC3B,MAAMxF,GAAkByF,EAAAA,GAAAA,GAAOD,EAAO,aAChC1F,GAAK4F,EAAAA,GAAAA,GAAaF,GACxB,MAAO,CAAE1F,KAAIE,kBAAiB,IAGhCoE,KAAKb,eAAiB+B,EAAOK,SAC/B,EACAC,uBAC2B,OAAtBxB,KAAKP,cAAgD,OAAvBO,KAAKX,gBAKtCW,KAAKV,kBAAmB+B,EAAAA,GAAAA,GAAOrB,KAAKX,cAAc,cAClDW,KAAKT,gBAAiB8B,EAAAA,GAAAA,IAAOI,EAAAA,GAAAA,GAAWzB,KAAKX,eAAe,cAC5DW,KAAK0B,gBACP,GAEFC,UACE3B,KAAK4B,gBACL5B,KAAKU,4BACP,G,YChGF,MAAMmB,IAA2B,QAAgB,GAAQ,CAAC,CAAC,SAASC,KAEpE,S","sources":["webpack://velzon/./src/views/dashboard/duos/index.vue","webpack://velzon/./src/views/dashboard/duos/index.vue?f434"],"sourcesContent":["<script>\n\nimport Layout from \"../../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../../app.config\";\nimport { format, subYears, eachMonthOfInterval, endOfMonth, startOfMonth } from 'date-fns';\nimport axios from 'axios';\n\nexport default {\n  page: {\n    title: \"Distribution Use of System (DUoS)\",\n    meta: [{ name: \"description\", content: appConfig.description }],\n  },\n  data() {\n    return {\n      title: \"Distribution Use of System (DUoS)\",\n      items: [\n        {\n          text: \"Industry Flows\",\n          href: \"/\",\n        },\n        {\n          text: \"Distribution Use of System (DUoS)\",\n          active: true,\n        },\n      ],\n      deliveryMonths:[],\n      selectedMonthType: null,\n      selectedMonth: null,\n      selectedFromDate: null,\n      selectedToDate: null,\n      mpanList: null,\n      selectedMpan: null,\n      duosData: null,\n    };\n  },\n  components: {\n    Layout,\n    PageHeader\n  },\n  computed:{\n    isDataAvailable() {\n      return !!this.duosData && this.duosData.length > 0;\n    }, \n  },  \n  methods:{\n    async fetchDuosData() {\n      console.log('fetching data');\n      var url = ''\n      if(this.selectedMonthType == \"1\")\n      {\n        url = `http://gedv-rtpsfc.gazpromuk.intra:19081/DV_FlexPortalApi/flexportal_api/duos/ByDeliveryDate/${this.selectedMpan}/${this.selectedFromDate}/${this.selectedToDate}`;\n      }\n      else\n      {\n        url = `http://gedv-rtpsfc.gazpromuk.intra:19081/DV_FlexPortalApi/flexportal_api/duos/ByInvoiceDate/${this.selectedMpan}/${this.selectedFromDate}/${this.selectedToDate}`;\n      }\n      try {\n        const response = await axios.get(url);\n        this.duosData = response.data;\n        console.log(this.duosData);\n      } catch (error) {\n        console.error('Error fetching duos data:', error);\n      }\n    }, \n    async fetchMpanData() {\n      const url = 'http://gedv-rtpsfc.gazpromuk.intra:19081/DV_FlexPortalApi/flexportal_api/mpan/';\n      try {\n        const response = await axios.get(url);\n        this.mpanList = response.data;\n      } catch (error) {\n        console.error('Error fetching Mpan data:', error);\n      }\n    },    \n    generateDeliveryMonthArray() {\n      const currentDate = new Date();\n      const sixYearsAgo = subYears(currentDate, 6);\n      const allMonths = eachMonthOfInterval({ start: sixYearsAgo, end: currentDate });\n\n      const result = allMonths.map(month => {\n        const monthYearString = format(month, 'MMMM yyyy');\n        const dt = startOfMonth(month);\n        return { dt, monthYearString };\n      });\n        \n      this.deliveryMonths = result.reverse();\n    },\n    handleDropdownChange() {\n      if(this.selectedMpan === null || this.selectedMonth === null)\n      {\n        return;\n      }\n\n      this.selectedFromDate = format(this.selectedMonth,'yyyy-MM-dd')\n      this.selectedToDate = format(endOfMonth(this.selectedMonth),'yyyy-MM-dd');\n      this.fetchDuosData();\n    },    \n  },\n  mounted(){\n    this.fetchMpanData();\n    this.generateDeliveryMonthArray();\n  }\n};\n</script>\n\n\n\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    <b-row>\n\n        <b-row>\n          <b-col cols=\"12\">\n            <b-card no-body>\n              <b-card-body class=\"p-0\">\n \n                <div class=\"input-group\">\n                        <label class=\"input-group-text\" style=\"width:150px\" for=\"igMonth\">Delivery Month</label>\n                        <select class=\"form-select\" id=\"igMonth\" v-model=\"selectedMonth\" @change=\"handleDropdownChange\">\n                          <option v-for=\"monthYear in deliveryMonths\" :key=\"monthYear.dt\" :value=\"monthYear.dt\">{{ monthYear.monthYearString }}</option>\n                        </select>\n                      </div>\n\n                      <div class=\"input-group\">\n                        <label class=\"input-group-text\" style=\"width:150px\" for=\"igMpan\">MPAN</label>\n                        <select class=\"form-select\" id=\"igMpan\" v-model=\"selectedMpan\" @change=\"handleDropdownChange\">\n                          <option v-for=\"mpan in mpanList\" :key=\"mpan.mpanCore\" :value=\"mpan.mpanCore\">{{ mpan.mpanCore }}</option>\n                        </select>\n                      </div>\n\n                      <div class=\"input-group\">\n                        <label class=\"input-group-text\" style=\"width:150px\" for=\"igSettlementRun\">Settlement Run</label>\n                        <select class=\"form-select\" id=\"igSettlementRun\" v-model=\"selectedSettlementRun\" @change=\"handleDropdownChange\">\n                          <option v-for=\"sr in settlementRunList\" :key=\"sr.settlementRunType\" :value=\"sr.settlementRunType\">{{ sr.description }}</option>\n                        </select>\n                      </div>\n\n                      <ul class=\"nav nav-tabs mb-3\" role=\"tablist\">\n                            <li class=\"nav-item\">\n                                <b-link class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#msp\" role=\"tab\"\n                                    aria-selected=\"true\">\n                                    MSP\n                                </b-link>\n                            </li>\n                            <li class=\"nav-item\">\n                                <b-link class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#gsp\" role=\"tab\"\n                                    aria-selected=\"false\">\n                                    GSP\n                                </b-link>\n                            </li>\n                            <li class=\"nav-item\">\n                                <b-link class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#nbp\" role=\"tab\"\n                                    aria-selected=\"false\">\n                                    NBP\n                                </b-link>\n                            </li>                            \n                        </ul>\n                        <div class=\"tab-content text-muted\">\n                            <div class=\"tab-pane\" id=\"msp\" role=\"tabpanel\">\n                              <b-row class=\"align-items-end\">\n                                <b-col sm=\"12\">\n                                  <div class=\"p-3\">\n                                    <div v-if=\"hasMspData\">\n                                      <div class=\"mt-3 table-hscroll\">\n                                        <table class=\"table table-nowrap table-hover\">\n                                            <thead>\n                                                <tr>\n                                                  <th scope=\"col\">Date</th>\n                                                    <!-- Generate columns up to 50 -->\n                                                    <template v-for=\"column in 50\" :key=\"column\">\n                                                      <th scope=\"col\" >{{ column }}</th>\n                                                    </template>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <!-- Generate rows for each day of the month -->\n                                                <template v-for=\"item in mspData\" :key=\"item.BillableDate\">\n                                                  <tr>\n                                                    <th scope=\"row\">\n                                                      {{new Date(item.BillableDate).toLocaleDateString(\"en-GB\")}}\n                                                    </th>\n                                                    <td v-for=\"(value, index) in 50\" :key=\"index\">{{ item['_' + (index + 1)] }}</td>\n                                                  </tr>\n                                                </template>\n                                            </tbody>\n                                          </table>\n                                      </div>\n                                    </div>\n                                    <div v-else class=\"centered-children-200\">\n                                      <p>No Data Available</p>\n                                    </div>   \n                                  </div>                               \n                                </b-col>\n                                <b-col sm=\"4\">\n                                </b-col>\n                              </b-row>\n                            </div>\n                            <div class=\"tab-pane active\" id=\"gsp\" role=\"tabpanel\">\n                              <b-row class=\"align-items-end\">\n                                <b-col sm=\"12\">\n                                  <div class=\"p-3\">\n                                    <div v-if=\"hasGspData\">\n                                      <div class=\"mt-3 table-hscroll\">\n                                        <table class=\"table table-nowrap table-hover\">\n                                            <thead>\n                                                <tr>\n                                                  <th scope=\"col\">Date</th>\n                                                    <!-- Generate columns up to 50 -->\n                                                    <template v-for=\"column in 50\" :key=\"column\">\n                                                      <th scope=\"col\" >{{ column }}</th>\n                                                    </template>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <!-- Generate rows for each day of the month -->\n                                                <template v-for=\"item in gspData\" :key=\"item.billableDate\">\n                                                  <tr>\n                                                    <th scope=\"row\">\n                                                      {{new Date(item.billableDate).toLocaleDateString(\"en-GB\")}}\n                                                    </th>\n                                                    <td v-for=\"(value, index) in 50\" :key=\"index\">{{ item['_' + (index + 1)] }}</td>\n                                                  </tr>\n                                                </template>\n                                            </tbody>\n                                          </table>\n                                      </div>\n                                    </div>\n                                    <div v-else class=\"centered-children-200\">\n                                      <p>No Data Available</p>\n                                    </div>   \n                                  </div> \n                                </b-col>\n                                <b-col sm=\"4\">\n                                </b-col>\n                              </b-row>\n                            </div>\n                            <div class=\"tab-pane active\" id=\"nbp\" role=\"tabpanel\">\n                              <b-row class=\"align-items-end\">\n                                <b-col sm=\"12\">\n                                  <div class=\"p-3\">\n                                    <div v-if=\"hasNbpData\">\n                                      <div class=\"mt-3 table-hscroll\">\n                                        <table class=\"table table-nowrap table-hover\">\n                                            <thead>\n                                                <tr>\n                                                  <th scope=\"col\">Date</th>\n                                                    <!-- Generate columns up to 50 -->\n                                                    <template v-for=\"column in 50\" :key=\"column\">\n                                                      <th scope=\"col\" >{{ column }}</th>\n                                                    </template>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <!-- Generate rows for each day of the month -->\n                                                <template v-for=\"item in nbpData\" :key=\"item.billableDate\">\n                                                  <tr>\n                                                    <th scope=\"row\">\n                                                      {{new Date(item.billableDate).toLocaleDateString(\"en-GB\")}}\n                                                    </th>\n                                                    <td v-for=\"(value, index) in 50\" :key=\"index\">{{ item['_' + (index + 1)] }}</td>\n                                                  </tr>\n                                                </template>\n                                            </tbody>\n                                          </table>\n                                      </div>\n                                    </div>\n                                    <div v-else class=\"centered-children-200\">\n                                      <p>No Data Available</p>\n                                    </div>   \n                                  </div> \n                                </b-col>\n                                <b-col sm=\"4\">\n                                </b-col>\n                              </b-row>\n                            </div>                            \n                        </div>\n\n              </b-card-body>\n            </b-card>\n          </b-col>\n        </b-row>\n    </b-row>\n  </Layout>\n</template>\n\n","import { render } from \"./index.vue?vue&type=template&id=1a8508a4\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\dplant\\\\Downloads\\\\Velzon_v3.0.0\\\\Vue\\\\corporate\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","style","for","role","id","scope","_hoisted_23","_hoisted_33","_hoisted_43","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","$data","items","_component_b_row","_component_b_col","cols","_component_b_card","_component_b_card_body","_hoisted_1","_hoisted_2","onChange","$options","_createElementBlock","_Fragment","monthYear","key","dt","value","monthYearString","_hoisted_4","_hoisted_5","mpan","mpanCore","_hoisted_7","_hoisted_8","_ctx","sr","settlementRunType","description","_hoisted_10","_hoisted_11","_component_b_link","href","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","sm","_hoisted_16","_hoisted_18","_hoisted_19","_hoisted_20","column","item","BillableDate","_hoisted_21","Date","toLocaleDateString","index","_hoisted_22","_hoisted_25","_hoisted_26","_hoisted_28","_hoisted_29","_hoisted_30","billableDate","_hoisted_31","_hoisted_32","_hoisted_35","_hoisted_36","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","page","meta","name","content","appConfig","data","text","active","deliveryMonths","selectedMonthType","selectedMonth","selectedFromDate","selectedToDate","mpanList","selectedMpan","duosData","components","Layout","PageHeader","computed","isDataAvailable","this","length","methods","async","console","log","url","response","axios","error","generateDeliveryMonthArray","currentDate","sixYearsAgo","subYears","allMonths","eachMonthOfInterval","start","end","result","map","month","format","startOfMonth","reverse","handleDropdownChange","endOfMonth","fetchDuosData","mounted","fetchMpanData","__exports__","render"],"sourceRoot":""}