{"version":3,"file":"js/9805.3ae359bd.js","mappings":"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","sources":["webpack://velzon/./src/views/dashboard/billableconsumption/index.vue","webpack://velzon/./src/views/dashboard/billableconsumption/index.vue?71e5"],"sourcesContent":["<script>\n\n    import Layout from \"../../../layouts/main.vue\";\n    import PageHeader from \"@/components/page-header\";\n    import appConfig from \"../../../../app.config\";\n    import axios from 'axios';\n    import { format, endOfMonth, subYears, eachMonthOfInterval, startOfMonth } from 'date-fns';\n\n    export default {\n        page: {\n            title: \"Billable Consumption\",\n            meta: [{ name: \"description\", content: appConfig.description }],\n        },\n        data() {\n            return {\n                title: \"Billable Consumption\",\n                items: [\n                    {\n                        text: \"Industry Flows\",\n                        href: \"/\",\n                    },\n                    {\n                        text: \"Billable Consumption\",\n                        active: true,\n                    },\n                ],\n                deliveryMonths: null,\n                selectedMonth: null,\n                mpanList: null,\n                selectedMpan: null,\n                settlementRunList: null,\n                selectedSettlementRun: null,\n                gspData: null,\n                mspData: null,\n                nbpData: null\n            };\n        },\n        components: {\n            Layout,\n            PageHeader\n        },\n        computed:{\n          hasGspData() {\n            return !!this.gspData && this.gspData.length > 0;\n          },\n          hasMspData() {\n            return !!this.mspData && this.mspData.length > 0;\n          },            \n          hasNbpData() {\n            return !!this.nbpData && this.nbpData.length > 0;\n          }            \n        },        \n        methods: {\n            async fetchGspData() {\n              const url = `http://gedv-rtpsfc.gazpromuk.intra:19081/DV_FlexPortalApi/flexportal_api/GspCons/GetGspConsPivot/${this.selectedMpan}/${this.selectedFromDate}/${this.selectedToDate}`;\n              try {\n                const response = await axios.get(url);\n                this.gspData = response.data;\n                console.log(this.gspData);\n              } catch (error) {\n                console.error('Error fetching GSP data:', error);\n              }\n            },   \n            async fetchMspData() {\n              console.log('fetching msp');\n              const url = `http://gedv-rtpsfc.gazpromuk.intra:19081/DV_FlexPortalApi/flexportal_api/MspCons/GetMspConsPivot/${this.selectedMpan}/${this.selectedFromDate}/${this.selectedToDate}`;\n              console.log(url);\n              try {\n                const response = await axios.get(url);\n                this.mspData = response.data;\n                console.log(this.mspData);\n              } catch (error) {\n                console.error('Error fetching MSP data:', error);\n              }\n            },                    \n            async fetchNbpData() {\n              console.log('fetching nbp');\n              const url = `http://gedv-rtpsfc.gazpromuk.intra:19081/DV_FlexPortalApi/flexportal_api/NbpCons/GetNbpConsPivot/${this.selectedMpan}/${this.selectedSettlementRun}/${this.selectedFromDate}/${this.selectedToDate}`;\n              console.log(url);\n              try {\n                const response = await axios.get(url);\n                this.nbpData = response.data;\n                console.log(this.nbpData);\n              } catch (error) {\n                console.error('Error fetching NBP data:', error);\n              }\n            },\n            async fetchSettlementRunData() {\n                const url = 'http://gedv-rtpsfc.gazpromuk.intra:19081/DV_FlexPortalApi/flexportal_api/settlementrun/';\n\n                try {\n                    const response = await axios.get(url);\n                    this.settlementRunList = response.data;\n                } catch (error) {\n                    console.error('Error fetching Settlement Run data:', error);\n                }\n            },\n            async fetchMpanData() {\n                const url = 'http://gedv-rtpsfc.gazpromuk.intra:19081/DV_FlexPortalApi/flexportal_api/mpan/';\n\n                try {\n                    const response = await axios.get(url);\n                    this.mpanList = response.data;\n                } catch (error) {\n                    console.error('Error fetching Mpan data:', error);\n                }\n            },\n            generateDeliveryMonthArray() {\n                const currentDate = new Date();\n                const sixYearsAgo = subYears(currentDate, 6);\n                const allMonths = eachMonthOfInterval({ start: sixYearsAgo, end: currentDate });\n\n                const result = allMonths.map(month => {\n                    const monthYearString = format(month, 'MMMM yyyy');\n                    const dt = startOfMonth(month);\n                    return { dt, monthYearString };\n                });\n\n                this.deliveryMonths = result.reverse();\n            },\n            handleDropdownChange() {\n              if(this.selectedMonth === null)\n              {\n                return;\n              }\n              this.selectedFromDate = format(this.selectedMonth,'yyyy-MM-dd')\n              this.selectedToDate = format(endOfMonth(this.selectedMonth),'yyyy-MM-dd');\n              \n              /*we just need a date range and an mpan for gsp data*/\n              if(this.selectedMpan !== null)\n              {\n                this.fetchGspData();\n                this.fetchMspData();\n              }\n\n              if(this.selectedSettlementRun !== null)\n              {\n                this.fetchNbpData();\n              }\n            },\n        },\n        mounted() {\n            this.fetchMpanData();\n            this.fetchSettlementRunData();\n            this.generateDeliveryMonthArray();\n        }\n    };\n</script>\n\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    <b-row>\n\n        <b-row>\n          <b-col cols=\"12\">\n            <b-card no-body>\n              <b-card-body class=\"p-0\">\n \n                <div class=\"input-group\">\n                        <label class=\"input-group-text\" style=\"width:150px\" for=\"igMonth\">Delivery Month</label>\n                        <select class=\"form-select\" id=\"igMonth\" v-model=\"selectedMonth\" @change=\"handleDropdownChange\">\n                          <option v-for=\"monthYear in deliveryMonths\" :key=\"monthYear.dt\" :value=\"monthYear.dt\">{{ monthYear.monthYearString }}</option>\n                        </select>\n                      </div>\n\n                      <div class=\"input-group\">\n                        <label class=\"input-group-text\" style=\"width:150px\" for=\"igMpan\">MPAN</label>\n                        <select class=\"form-select\" id=\"igMpan\" v-model=\"selectedMpan\" @change=\"handleDropdownChange\">\n                          <option v-for=\"mpan in mpanList\" :key=\"mpan.mpanCore\" :value=\"mpan.mpanCore\">{{ mpan.mpanCore }}</option>\n                        </select>\n                      </div>\n\n                      <div class=\"input-group\">\n                        <label class=\"input-group-text\" style=\"width:150px\" for=\"igSettlementRun\">Settlement Run</label>\n                        <select class=\"form-select\" id=\"igSettlementRun\" v-model=\"selectedSettlementRun\" @change=\"handleDropdownChange\">\n                          <option v-for=\"sr in settlementRunList\" :key=\"sr.settlementRunType\" :value=\"sr.settlementRunType\">{{ sr.description }}</option>\n                        </select>\n                      </div>\n\n                      <ul class=\"nav nav-tabs mb-3\" role=\"tablist\">\n                            <li class=\"nav-item\">\n                                <b-link class=\"nav-link active\" data-bs-toggle=\"tab\" href=\"#msp\" role=\"tab\"\n                                    aria-selected=\"true\">\n                                    MSP\n                                </b-link>\n                            </li>\n                            <li class=\"nav-item\">\n                                <b-link class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#gsp\" role=\"tab\"\n                                    aria-selected=\"false\">\n                                    GSP\n                                </b-link>\n                            </li>\n                            <li class=\"nav-item\">\n                                <b-link class=\"nav-link\" data-bs-toggle=\"tab\" href=\"#nbp\" role=\"tab\"\n                                    aria-selected=\"false\">\n                                    NBP\n                                </b-link>\n                            </li>                            \n                        </ul>\n                        <div class=\"tab-content text-muted\">\n                            <div class=\"tab-pane\" id=\"msp\" role=\"tabpanel\">\n                              <b-row class=\"align-items-end\">\n                                <b-col sm=\"12\">\n                                  <div class=\"p-3\">\n                                    <div v-if=\"hasMspData\">\n                                      <div class=\"mt-3 table-hscroll\">\n                                        <table class=\"table table-nowrap table-hover\">\n                                            <thead>\n                                                <tr>\n                                                  <th scope=\"col\">Date</th>\n                                                    <!-- Generate columns up to 50 -->\n                                                    <template v-for=\"column in 50\" :key=\"column\">\n                                                      <th scope=\"col\" >{{ column }}</th>\n                                                    </template>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <!-- Generate rows for each day of the month -->\n                                                <template v-for=\"item in mspData\" :key=\"item.BillableDate\">\n                                                  <tr>\n                                                    <th scope=\"row\">\n                                                      {{new Date(item.BillableDate).toLocaleDateString(\"en-GB\")}}\n                                                    </th>\n                                                    <td v-for=\"(value, index) in 50\" :key=\"index\">{{ item['_' + (index + 1)] }}</td>\n                                                  </tr>\n                                                </template>\n                                            </tbody>\n                                          </table>\n                                      </div>\n                                    </div>\n                                    <div v-else class=\"centered-children-200\">\n                                      <p>No Data Available</p>\n                                    </div>   \n                                  </div>                               \n                                </b-col>\n                                <b-col sm=\"4\">\n                                </b-col>\n                              </b-row>\n                            </div>\n                            <div class=\"tab-pane active\" id=\"gsp\" role=\"tabpanel\">\n                              <b-row class=\"align-items-end\">\n                                <b-col sm=\"12\">\n                                  <div class=\"p-3\">\n                                    <div v-if=\"hasGspData\">\n                                      <div class=\"mt-3 table-hscroll\">\n                                        <table class=\"table table-nowrap table-hover\">\n                                            <thead>\n                                                <tr>\n                                                  <th scope=\"col\">Date</th>\n                                                    <!-- Generate columns up to 50 -->\n                                                    <template v-for=\"column in 50\" :key=\"column\">\n                                                      <th scope=\"col\" >{{ column }}</th>\n                                                    </template>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <!-- Generate rows for each day of the month -->\n                                                <template v-for=\"item in gspData\" :key=\"item.billableDate\">\n                                                  <tr>\n                                                    <th scope=\"row\">\n                                                      {{new Date(item.billableDate).toLocaleDateString(\"en-GB\")}}\n                                                    </th>\n                                                    <td v-for=\"(value, index) in 50\" :key=\"index\">{{ item['_' + (index + 1)] }}</td>\n                                                  </tr>\n                                                </template>\n                                            </tbody>\n                                          </table>\n                                      </div>\n                                    </div>\n                                    <div v-else class=\"centered-children-200\">\n                                      <p>No Data Available</p>\n                                    </div>   \n                                  </div> \n                                </b-col>\n                                <b-col sm=\"4\">\n                                </b-col>\n                              </b-row>\n                            </div>\n                            <div class=\"tab-pane active\" id=\"nbp\" role=\"tabpanel\">\n                              <b-row class=\"align-items-end\">\n                                <b-col sm=\"12\">\n                                  <div class=\"p-3\">\n                                    <div v-if=\"hasNbpData\">\n                                      <div class=\"mt-3 table-hscroll\">\n                                        <table class=\"table table-nowrap table-hover\">\n                                            <thead>\n                                                <tr>\n                                                  <th scope=\"col\">Date</th>\n                                                    <!-- Generate columns up to 50 -->\n                                                    <template v-for=\"column in 50\" :key=\"column\">\n                                                      <th scope=\"col\" >{{ column }}</th>\n                                                    </template>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <!-- Generate rows for each day of the month -->\n                                                <template v-for=\"item in nbpData\" :key=\"item.billableDate\">\n                                                  <tr>\n                                                    <th scope=\"row\">\n                                                      {{new Date(item.billableDate).toLocaleDateString(\"en-GB\")}}\n                                                    </th>\n                                                    <td v-for=\"(value, index) in 50\" :key=\"index\">{{ item['_' + (index + 1)] }}</td>\n                                                  </tr>\n                                                </template>\n                                            </tbody>\n                                          </table>\n                                      </div>\n                                    </div>\n                                    <div v-else class=\"centered-children-200\">\n                                      <p>No Data Available</p>\n                                    </div>   \n                                  </div> \n                                </b-col>\n                                <b-col sm=\"4\">\n                                </b-col>\n                              </b-row>\n                            </div>                            \n                        </div>\n\n              </b-card-body>\n            </b-card>\n          </b-col>\n        </b-row>\n    </b-row>\n  </Layout>\n</template>\n","import { render } from \"./index.vue?vue&type=template&id=2a699f86\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\dplant\\\\Downloads\\\\Velzon_v3.0.0\\\\Vue\\\\corporate\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","style","for","role","id","scope","_hoisted_23","_hoisted_33","_hoisted_43","_createBlock","_component_Layout","_createVNode","_component_PageHeader","title","$data","items","_component_b_row","_component_b_col","cols","_component_b_card","_component_b_card_body","_hoisted_1","_hoisted_2","onChange","$options","_createElementBlock","_Fragment","monthYear","key","dt","value","monthYearString","_hoisted_4","_hoisted_5","mpan","mpanCore","_hoisted_7","_hoisted_8","sr","settlementRunType","description","_hoisted_10","_hoisted_11","_component_b_link","href","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","sm","_hoisted_16","_hoisted_18","_hoisted_19","_hoisted_20","column","item","BillableDate","_hoisted_21","Date","toLocaleDateString","index","_hoisted_22","_hoisted_25","_hoisted_26","_hoisted_28","_hoisted_29","_hoisted_30","billableDate","_hoisted_31","_hoisted_32","_hoisted_35","_hoisted_36","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","page","meta","name","content","appConfig","data","text","active","deliveryMonths","selectedMonth","mpanList","selectedMpan","settlementRunList","selectedSettlementRun","gspData","mspData","nbpData","components","Layout","PageHeader","computed","hasGspData","this","length","hasMspData","hasNbpData","methods","async","url","selectedFromDate","selectedToDate","response","axios","console","log","error","generateDeliveryMonthArray","currentDate","sixYearsAgo","subYears","allMonths","eachMonthOfInterval","start","end","result","map","month","format","startOfMonth","reverse","handleDropdownChange","endOfMonth","fetchGspData","fetchMspData","fetchNbpData","mounted","fetchMpanData","fetchSettlementRunData","__exports__","render"],"sourceRoot":""}